import { Module } from '@nestjs/common';
import { ConfigModule } from '@nestjs/config';
import { ScheduleModule } from '@nestjs/schedule';
import {
  DatabaseModule,
  KafkaModule,
  LoggerModule,
  RedisModule,
  ValidationModule,
} from '@zro/common';
import {
  CurrencyModel,
  GlobalLimitModel,
  LimitTypeModel,
  CreateOperationMicroserviceController,
  OperationsIndexModel,
  OperationModel,
  TransactionTypeModel,
  UserLimitModel,
  WalletAccountModel,
  WalletAccountTransactionModel,
  WalletModel,
  P2PTransferModel,
  WalletAccountCacheModel,
  WalletInvitationModel,
  AcceptOperationMicroserviceController,
  RevertOperationMicroserviceController,
  GetOperationByIdMicroserviceController,
  CreateCurrencyMicroserviceController,
  GetCurrencyBySymbolMicroserviceController,
  GetCurrencyByTagMicroserviceController,
  GetCurrencyByIdMicroserviceController,
  GetAllWalletAccountMicroserviceController,
  GetWalletAccountByUserAndCurrencyMicroserviceController,
  GetWalletAccountByAccountNumberAndCurrencyMicroserviceController,
  SetOperationReferenceByIdMicroserviceController,
  UpdateUserLimitMicroserviceController,
  PendingUserNestObserver,
  GetUserLimitsByFilterMicroserviceController,
  GetLimitTypesByFilterMicroserviceController,
  GetAllCurrencyMicroserviceController,
  CreateAndAcceptOperationMicroserviceController,
  UpdateUserLimitByAdminMicroserviceController,
  GetUserLimitByIdAndUserMicroserviceController,
  CreateOperationStreamQuotationNestObserver,
  GetWalletByUuidMicroserviceController,
  GetWalletByUserAndDefaultIsTrueMicroserviceController,
  CreateP2PTransferMicroserviceController,
  GetWalletAccountByWalletAndCurrencyMicroserviceController,
  GetAllWalletByUserMicroserviceController,
  GetAllOperationsByUserAndWalletAndFilterMicroserviceController,
  GetOperationByUserAndWalletAndIdMicroserviceController,
  GetUserWalletByUserAndWalletMicroserviceController,
  GetAllUserWalletByUserMicroserviceController,
  UserWalletModel,
  CreateActiveWalletMicroserviceController,
  UpdateWalletByUuidAndUserMicroserviceController,
  DeleteWalletByUuidAndUserMicroserviceController,
  GetAllWalletInvitationByEmailMicroserviceController,
  GetAllWalletInvitationByUserMicroserviceController,
  CreateWalletInvitationMicroserviceController,
  AcceptWalletInvitationMicroserviceController,
  DeclineWalletInvitationMicroserviceController,
  CancelWalletInvitationMicroserviceController,
  DeleteUserWalletByUserAndWalletMicroserviceController,
  SyncPendingExpiredWalletInvitationCronService,
  DeleteUserWalletMicroserviceController,
  GetWalletAccountByWalletAndUuidMicroserviceController,
  GetOperationReceiptByUserAndWalletAndIdMicroserviceController,
  GetAllUserWalletByUserAndWalletMicroserviceController,
  UpdateUserWalletByWalletMicroserviceController,
  GetActiveTransactionTypeByTagMicroserviceController,
  GetAllPermissionActionByPermissionTypesMicroserviceController,
  PermissionTypeActionModel,
  PermissionActionModel,
  PermissionTypeModel,
  GetAllOperationsByFilterMicroserviceController,
  CalculateCryptoAvgPriceNestObserver,
  SyncAccountsClosuresReportsCronService,
  SyncAssetsForfeituresReportsCronService,
  SyncExtraCreditsReportsCronService,
  SyncP2PChatsReportsCronService,
  SyncP2PTransfersReportsCronService,
  SyncDepositsReceiveReportsCronService,
  SyncConversionsReportsCronService,
  SyncGatewayReportsCronService,
  UserLimitTrackerModel,
  RevertedOperationNestObserver,
  SyncUpdateUserLimitTrackerByIntervalCronServiceInit,
  SyncCreateOperationIndexCronService,
  SyncDeleteOperationIndexCronService,
  GetStatementMicroserviceController,
} from '@zro/operations/infrastructure';
import { GetBankingTedReceiptByUserAndOperationServiceKafka } from '@zro/banking/infrastructure';
import { SendEmailServiceKafka } from '@zro/notifications/infrastructure';
import {
  GetConversionByOperationServiceKafka,
  GetCryptoPriceByCurrencyAndDateServiceKafka,
  GetConversionReceiptByUserAndOperationServiceKafka,
} from '@zro/otc/infrastructure';
import { GetReceiptByOperationIdServiceKafka } from '@zro/pix-payments/infrastructure';
import { CreateReportOperationServiceKafka } from '@zro/reports/infrastructure';
import {
  GetUserByEmailServiceKafka,
  GetUserByIdServiceKafka,
  GetUserByPhoneNumberServiceKafka,
  GetUserByUuidServiceKafka,
} from '@zro/users/infrastructure';

@Module({
  imports: [
    ScheduleModule.forRoot(),
    ConfigModule,
    LoggerModule,
    ValidationModule,
    KafkaModule.forFeature([
      GetBankingTedReceiptByUserAndOperationServiceKafka,
      SendEmailServiceKafka,
      GetConversionByOperationServiceKafka,
      GetCryptoPriceByCurrencyAndDateServiceKafka,
      GetConversionReceiptByUserAndOperationServiceKafka,
      GetReceiptByOperationIdServiceKafka,
      CreateReportOperationServiceKafka,
      GetUserByEmailServiceKafka,
      GetUserByIdServiceKafka,
      GetUserByPhoneNumberServiceKafka,
      GetUserByUuidServiceKafka,
    ]),
    RedisModule,
    DatabaseModule.forFeature([
      CurrencyModel,
      LimitTypeModel,
      TransactionTypeModel,
      UserLimitModel,
      GlobalLimitModel,
      WalletModel,
      WalletAccountModel,
      P2PTransferModel,
      OperationsIndexModel,
      OperationModel,
      WalletAccountTransactionModel,
      WalletAccountCacheModel,
      UserWalletModel,
      WalletInvitationModel,
      PermissionTypeModel,
      PermissionActionModel,
      PermissionTypeActionModel,
      UserLimitTrackerModel,
    ]),
  ],
  controllers: [
    CreateCurrencyMicroserviceController,
    GetCurrencyBySymbolMicroserviceController,
    GetCurrencyByTagMicroserviceController,
    GetCurrencyByIdMicroserviceController,
    GetAllCurrencyMicroserviceController,
    CreateOperationMicroserviceController,
    AcceptOperationMicroserviceController,
    CreateAndAcceptOperationMicroserviceController,
    GetAllWalletAccountMicroserviceController,
    GetWalletAccountByUserAndCurrencyMicroserviceController,
    RevertOperationMicroserviceController,
    GetWalletAccountByAccountNumberAndCurrencyMicroserviceController,
    GetOperationByIdMicroserviceController,
    SetOperationReferenceByIdMicroserviceController,
    UpdateUserLimitMicroserviceController,
    PendingUserNestObserver,
    GetUserLimitsByFilterMicroserviceController,
    GetLimitTypesByFilterMicroserviceController,
    UpdateUserLimitByAdminMicroserviceController,
    GetUserLimitByIdAndUserMicroserviceController,
    CreateOperationStreamQuotationNestObserver,
    GetWalletByUuidMicroserviceController,
    GetWalletByUserAndDefaultIsTrueMicroserviceController,
    CreateP2PTransferMicroserviceController,
    GetWalletAccountByWalletAndCurrencyMicroserviceController,
    GetAllWalletByUserMicroserviceController,
    GetAllOperationsByUserAndWalletAndFilterMicroserviceController,
    GetOperationByUserAndWalletAndIdMicroserviceController,
    GetUserWalletByUserAndWalletMicroserviceController,
    GetAllUserWalletByUserMicroserviceController,
    CreateActiveWalletMicroserviceController,
    UpdateWalletByUuidAndUserMicroserviceController,
    DeleteWalletByUuidAndUserMicroserviceController,
    GetAllWalletInvitationByEmailMicroserviceController,
    GetAllWalletInvitationByUserMicroserviceController,
    CreateWalletInvitationMicroserviceController,
    AcceptWalletInvitationMicroserviceController,
    DeclineWalletInvitationMicroserviceController,
    CancelWalletInvitationMicroserviceController,
    DeleteUserWalletByUserAndWalletMicroserviceController,
    DeleteUserWalletMicroserviceController,
    GetWalletAccountByWalletAndUuidMicroserviceController,
    GetOperationReceiptByUserAndWalletAndIdMicroserviceController,
    GetAllUserWalletByUserAndWalletMicroserviceController,
    UpdateUserWalletByWalletMicroserviceController,
    GetActiveTransactionTypeByTagMicroserviceController,
    GetAllOperationsByFilterMicroserviceController,
    GetAllPermissionActionByPermissionTypesMicroserviceController,
    CalculateCryptoAvgPriceNestObserver,
    RevertedOperationNestObserver,
    GetStatementMicroserviceController,
  ],
  providers: [
    SyncPendingExpiredWalletInvitationCronService,
    SyncAccountsClosuresReportsCronService,
    SyncAssetsForfeituresReportsCronService,
    SyncExtraCreditsReportsCronService,
    SyncP2PChatsReportsCronService,
    SyncP2PTransfersReportsCronService,
    SyncDepositsReceiveReportsCronService,
    SyncConversionsReportsCronService,
    SyncGatewayReportsCronService,
    SyncUpdateUserLimitTrackerByIntervalCronServiceInit,
    SyncCreateOperationIndexCronService,
    SyncDeleteOperationIndexCronService,
  ],
})
export class OperationModule {}
